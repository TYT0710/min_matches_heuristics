from os import listdir

def append_data_file_info():
	
	test_sets = ['furman_sahinidis', 'chen_grossmann_miller', 'grossmann_random', 'large_scale']
	
	for test_set in test_sets:
		#dat_files_path='data/original_instances/' + test_set + '/dat_files/'
		dat_files_path='data/mip_instances/' + test_set + '/'
		test_ids=listdir(dat_files_path) 
	
		for test_id in test_ids:
			if '~' not in test_id:
				
				#file_name = 'data/original_instances/' + test_set + '/dat_files/' + test_id
				file_name = 'data/mip_instances/' + test_set + '/' + test_id
				with open(file_name, 'r') as rf:
					content = rf.read() 
				
				content = get_data_file_info(test_set) + content
				
				with open(file_name, 'w') as wf:
					wf.write(content)
	



#f = open('min_matches_heuristics/data/original_instances/', 'r')
#print(f.read()) 

def get_data_file_info(test_set):
	
	if test_set == 'furman_sahinidis':
		info = 'Test case originally investigated by Furman, Sahinidis (2000). \n'
		info += 'Manually digitized and made publicly available by Letsios, Kouyialis, Misener (2018). \n \n'
	
	if test_set == 'chen_grossmann_miller':
		info = 'Test case originally investigated by Chen, Grossmann, Miller (2015). \n'
		info += 'Retrieved from www.minlp.org. \n \n '
	
	if test_set == 'grossmann_random':
		info = 'Test case originally investigated by Letsios, Kouyialis, Misener (2018). \n'
		info += 'Randomly generated by random procedure and seed provided as a personal communication from Ignacio Grossmann to Ruth Misener. \n \n'
	
	if test_set == 'large_scale':
		info = 'Test case originally investigated by Letsios, Kouyialis, Misener (2018). \n '
		info += 'Randomly generated by random procedure described in Letsios, Kouyialis, Misener. \n \n'
	
	return info